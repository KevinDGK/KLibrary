apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.dgk.klibrary"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // 分包
        multiDexEnabled true

        ndk {
            /*
                选择要添加的对应cpu类型的.so库，POS3/POS1+/MINI 用的均是arm芯片，并且目前手机也均是arm芯片。
                1.v7和v8是可以向下兼容的；
                2.如果指定了cpu类型为armeabi和armeabi-v7a，其中armeabi有a.so和b.so，armeabi-v7a有a.so，那么
                - 用到a.so库时：运行在armeabi手机上会使用armeabi的a.so，运行在armeabi-v7a手机上会使用armeabi-v7a的a.so；
                - 用到b.so库时：运行在armeabi手机上会使用armeabi的b.so，运行在armeabi-v7a手机上会抛出运行时异常java.lang.UnsatisfiedLinkError；
                所以说，如果指定了cpu类型，则必须每个第三方库都要提供指定类型的.so库
             */
            abiFilters 'armeabi'
            // 'armeabi-v7a', 'armeabi-v8a', 'x86', 'x86_64','mips', 'mips64'
        }

        // ARouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // 源码目录
    sourceSets {
        main {
            manifest.srcFile('src/main/AndroidManifest.xml')
            def dirs = ['p_demo', 'p_note', 'p_imitation', 'main']
            dirs.each { dir ->
                java.srcDir("src/$dir/java")
                res.srcDir("src/$dir/res")
            }
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

kapt {
    // ARouter
    arguments {
        arg("moduleName", project.getName())
    }
}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation project(':common-util')
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // Android
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support:cardview-v7:26.1.0'
    // Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    // 分包
    implementation 'com.android.support:multidex:1.0.3'
    // 依赖基础工程
    implementation project(':common-module')
    // ARouter
    implementation 'com.alibaba:arouter-api:1.3.1'
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'
    kapt 'com.alibaba:arouter-compiler:1.1.4'
    // 响应式编程-RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.1.12'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
}
